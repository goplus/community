// Code generated by gop (Go+); DO NOT EDIT.

package main

import (
	"context"
	"flag"
	"github.com/goplus/community/internal/core"
	"github.com/goplus/yap"
	"github.com/joho/godotenv"
	_ "github.com/joho/godotenv/autoload"
	"github.com/qiniu/x/xlog"
	"net/http"
)

const _ = true
const (
	limitConst = 10
	labelConst = "article"
)

type get struct {
	yap.Handler
	*AppV2
	community *core.Community
}
type get_error struct {
	yap.Handler
	*AppV2
	community *core.Community
}
type get_failed struct {
	yap.Handler
	*AppV2
}
type get_success struct {
	yap.Handler
	*AppV2
}
type AppV2 struct {
	yap.AppV2
	community *core.Community
	domain    string
}

//line cmd/v2community/main.yap:16
func (this *AppV2) MainEntry() {
//line cmd/v2community/main.yap:16:1
	xLog := xlog.New("")
//line cmd/v2community/main.yap:17:1
	todo := context.TODO()
//line cmd/v2community/main.yap:18:1
	configFile := ".env"
//line cmd/v2community/main.yap:19:1
	flag.StringVar(&configFile, "config", ".env", "Path to the config file")
//line cmd/v2community/main.yap:20:1
	flag.Parse()
//line cmd/v2community/main.yap:21:1
	if
//line cmd/v2community/main.yap:21:1
	err := godotenv.Load(configFile); err != nil {
//line cmd/v2community/main.yap:22:1
		xLog.Error(err)
	}
//line cmd/v2community/main.yap:25:1
	conf := core.NewConfigFromEnv()
//line cmd/v2community/main.yap:26:1
	this.community, _ = core.New(todo, conf)
//line cmd/v2community/main.yap:27:1
	this.domain = conf.QiNiuConfig.Domain
//line cmd/v2community/main.yap:28:1
	endpoint := conf.AppConfig.EndPoint
//line cmd/v2community/main.yap:30:1
	xLog.Info("Started in endpoint: ", endpoint)
//line cmd/v2community/main.yap:33:1
	this.Run(endpoint, func(h http.Handler) http.Handler {
//line cmd/v2community/main.yap:35:1
		return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
//line cmd/v2community/main.yap:36:1
			defer func() {
//line cmd/v2community/main.yap:38:1
				if
//line cmd/v2community/main.yap:38:1
				err := recover(); err != nil {
//line cmd/v2community/main.yap:39:1
					xLog.Error(err)
//line cmd/v2community/main.yap:40:1
					http.Redirect(w, r, "/failed", http.StatusFound)
				}
			}()
//line cmd/v2community/main.yap:44:1
			h.ServeHTTP(w, r)
		})
	})
}
func (this *AppV2) Main() {
	yap.Gopt_AppV2_Main(this, new(get), new(get_error), new(get_failed), new(get_success))
}

//line cmd/v2community/get.yap:16
func (this *get) Main(_gop_arg0 *yap.Context) {
	this.Handler.Main(_gop_arg0)
//line cmd/v2community/get.yap:16:1
	xLog := xlog.New("")
//line cmd/v2community/get.yap:17:1
	todo := context.TODO()
//line cmd/v2community/get.yap:18:1
	var user *core.User
//line cmd/v2community/get.yap:19:1
	token, err := this.Request.Cookie("token")
//line cmd/v2community/get.yap:20:1
	if err == nil {
//line cmd/v2community/get.yap:21:1
		user, _ = this.community.GetUser(token.Value)
	}
//line cmd/v2community/get.yap:25:1
	articles, next, err := this.community.ListArticle(todo, core.MarkBegin, limitConst, "", labelConst)
//line cmd/v2community/get.yap:26:1
	if err != nil {
//line cmd/v2community/get.yap:27:1
		xLog.Error("get article error:", err)
	}
//line cmd/v2community/get.yap:31:1
	if err != nil {
//line cmd/v2community/get.yap:32:1
		xLog.Error("json marshal error:", err)
	}
//line cmd/v2community/get.yap:34:1
	this.Yap__1("home", map[string]interface{}{"User": user, "Items": articles, "Next": next})
}
func (this *get) Classfname() string {
	return "get"
}

var user *core.User

//line cmd/v2community/get_error.yap:10
func (this *get_error) Main(_gop_arg0 *yap.Context) {
	this.Handler.Main(_gop_arg0)
//line cmd/v2community/get_error.yap:10:1
	token, err := this.Request.Cookie("token")
//line cmd/v2community/get_error.yap:11:1
	if err == nil {
//line cmd/v2community/get_error.yap:12:1
		user, _ = this.community.GetUser(token.Value)
	}
//line cmd/v2community/get_error.yap:15:1
	this.Yap__1("4xx", map[string]*core.User{"User": user})
}
func (this *get_error) Classfname() string {
	return "get_error"
}
func (this *get_failed) Classfname() string {
	return "get_failed"
}
func (this *get_failed) Main(_gop_arg0 *yap.Context) {
	this.Handler.Main(_gop_arg0)
}

//line cmd/v2community/get_success.yap:1
func (this *get_success) Main(_gop_arg0 *yap.Context) {
	this.Handler.Main(_gop_arg0)
//line cmd/v2community/get_success.yap:1:1
	this.Yap__1("2xx", map[string]interface{}{})
}
func (this *get_success) Classfname() string {
	return "get_success"
}
func main() {
	new(AppV2).Main()
}
